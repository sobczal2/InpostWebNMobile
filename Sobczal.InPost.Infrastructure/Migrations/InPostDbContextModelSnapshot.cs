// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sobczal.InPost.Infrastructure.Core;

#nullable disable

namespace Sobczal.InPost.Infrastructure.Migrations
{
    [DbContext(typeof(InPostDbContext))]
    partial class InPostDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sobczal.InPost.Models.Packages.Locker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Boxes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3895097-3b6a-4436-a258-e0d412da6332"),
                            Address = "Address 1",
                            Name = "Locker 1"
                        },
                        new
                        {
                            Id = new Guid("3113bbae-6193-49f4-a39a-ffbc135a8b12"),
                            Address = "Address 2",
                            Name = "Locker 2"
                        });
                });

            modelBuilder.Entity("Sobczal.InPost.Models.Packages.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CanBePickedUp")
                        .HasColumnType("boolean");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uuid");

                    b.Property<string>("FromId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReceivedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid");

                    b.Property<string>("ToId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("FromId");

                    b.HasIndex("SourceId");

                    b.HasIndex("ToId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Sobczal.InPost.Models.Packages.PackageStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageStep");
                });

            modelBuilder.Entity("Sobczal.InPost.Models.Users.InPostUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InPostUser");
                });

            modelBuilder.Entity("Sobczal.InPost.Models.Packages.Package", b =>
                {
                    b.HasOne("Sobczal.InPost.Models.Packages.Locker", "Destination")
                        .WithMany("PackagesToPickup")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sobczal.InPost.Models.Users.InPostUser", "From")
                        .WithMany("SentPackages")
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sobczal.InPost.Models.Packages.Locker", "Source")
                        .WithMany("PackagesToSent")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sobczal.InPost.Models.Users.InPostUser", "To")
                        .WithMany("ReceivedPackages")
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("From");

                    b.Navigation("Source");

                    b.Navigation("To");
                });

            modelBuilder.Entity("Sobczal.InPost.Models.Packages.PackageStep", b =>
                {
                    b.HasOne("Sobczal.InPost.Models.Packages.Package", "Package")
                        .WithMany("PackageSteps")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("Sobczal.InPost.Models.Packages.Locker", b =>
                {
                    b.Navigation("PackagesToPickup");

                    b.Navigation("PackagesToSent");
                });

            modelBuilder.Entity("Sobczal.InPost.Models.Packages.Package", b =>
                {
                    b.Navigation("PackageSteps");
                });

            modelBuilder.Entity("Sobczal.InPost.Models.Users.InPostUser", b =>
                {
                    b.Navigation("ReceivedPackages");

                    b.Navigation("SentPackages");
                });
#pragma warning restore 612, 618
        }
    }
}
